This Program is an extension to the last reader-writer problem. Please check the
last reader-writer first before proceeding further.

If a writer arrives while there are readers in the critical section, it might
wait in queue forever while readers come and go. As long as a new reader arrives
before the last of the current readers departs, there will always be at least
one reader in the room.

This situation is not a deadlock, because some threads are making progress, but
it is not exactly desirable. A program like this might work as long as the load
on the system is low, because then there are plenty of opportunities for the
writers. But as the load increases the behavior of the system would deteriorate
quickly (at least from the point of view of writers).

Puzzle:

Extend the last solution so that when a writer arrives, the existing
readers can finish, but no additional readers may enter.

Solution:

We add a turnstile for the readers and allow writers to lock it. The writers
have to pass through the same turnstile, but they should check the 'turnstile'
semaphore while they are inside the turnstile. If a writer gets stuck in the
turnstile it has the effect of forcing the readers to queue at the turnstile.
Then when the last reader leaves the critical section, we are guaranteed that at
least one writer enters next (before any of the queued readers can proceed).
